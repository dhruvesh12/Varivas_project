{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./../../services/all-services.service\";\nimport * as i3 from \"@angular/platform-browser\";\nimport * as i4 from \"@angular/common\";\nfunction MovieDetailsComponent_iframe_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"iframe\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r0.getUrl(), i0.ɵɵsanitizeResourceUrl);\n  }\n}\nexport class MovieDetailsComponent {\n  constructor(route, service, sanitizer) {\n    this.route = route;\n    this.service = service;\n    this.sanitizer = sanitizer;\n    this.selectedMovie = {\n      link: ''\n    };\n  }\n  ngOnInit() {\n    this.route.params.subscribe(paramsId => {\n      this.id = paramsId['id'];\n      console.log(this.id);\n    });\n    this.getAllMovie();\n  }\n  getUrl() {\n    return this.sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/' + this.selectedMovie[0].link + '?&controls=0&showinfo=0&showsearch=0&rel=1&iv_load_policy=3&cc_load_policy=1&autoplay=1&loop=1&fs=0&modestbranding=0');\n  }\n  getAllMovie() {\n    this.service.getPopularMovie().subscribe(response => {\n      let data = JSON.parse(JSON.stringify(response)).details;\n      this.selectedMovie = data.filter(x => {\n        return x.title == this.id;\n      });\n      console.log(this.selectedMovie);\n    });\n  }\n}\nMovieDetailsComponent.ɵfac = function MovieDetailsComponent_Factory(t) {\n  return new (t || MovieDetailsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.AllServicesService), i0.ɵɵdirectiveInject(i3.DomSanitizer));\n};\nMovieDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MovieDetailsComponent,\n  selectors: [[\"app-movie-details\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[\"style\", \"\", \"width\", \"560\", \"height\", \"315\", \"frameborder\", \"0\", \"allow\", \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture; \", \"allowfullscreen\", \"\", 3, \"src\", 4, \"ngIf\"], [\"width\", \"560\", \"height\", \"315\", \"frameborder\", \"0\", \"allow\", \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture; \", \"allowfullscreen\", \"\", 3, \"src\"]],\n  template: function MovieDetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, MovieDetailsComponent_iframe_0_Template, 1, 1, \"iframe\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedMovie[0]);\n    }\n  },\n  dependencies: [i4.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAAAA,4BAC+G;;;;IADvCA,+DAAgB;;;ACWxF,OAAM,MAAOC,qBAAqB;EAQhCC,YAAoBC,KAAqB,EAAUC,OAA2B,EAASC,SAAsB;IAAzF,UAAK,GAALF,KAAK;IAA0B,YAAO,GAAPC,OAAO;IAA6B,cAAS,GAATC,SAAS;IAJhG,kBAAa,GAAK;MAChBC,IAAI,EAAC;KACN;EAEiH;EAElHC,QAAQ;IACN,IAAI,CAACJ,KAAK,CAACK,MAAM,CAACC,SAAS,CAACC,QAAQ,IAAG;MACrC,IAAI,CAACC,EAAE,GAAGD,QAAQ,CAAC,IAAI,CAAC;MACxBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,EAAE,CAAC;IACtB,CAAC,CAAC;IAEF,IAAI,CAACG,WAAW,EAAE;EACpB;EAEAC,MAAM;IAEN,OAAO,IAAI,CAACV,SAAS,CAACW,8BAA8B,CAAC,gCAAgC,GAAC,IAAI,CAACC,aAAa,CAAC,CAAC,CAAC,CAACX,IAAI,GAAC,sHAAsH,CAAC;EAC1O;EAEEQ,WAAW;IACT,IAAI,CAACV,OAAO,CAACc,eAAe,EAAE,CAACT,SAAS,CAACU,QAAQ,IAAE;MACjD,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACJ,QAAQ,CAAC,CAAC,CAACK,OAAO;MAEvD,IAAI,CAACP,aAAa,GAAGG,IAAI,CAACK,MAAM,CAAEC,CAAK,IAAG;QACxC,OAAOA,CAAC,CAACC,KAAK,IAAI,IAAI,CAAChB,EAAE;MAC3B,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACI,aAAa,CAAC;IACjC,CAAC,CAAC;EACJ;;AAlCWhB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDXlChC,4EAC+G;;;MADpEA,2CAA2B","names":["i0","MovieDetailsComponent","constructor","route","service","sanitizer","link","ngOnInit","params","subscribe","paramsId","id","console","log","getAllMovie","getUrl","bypassSecurityTrustResourceUrl","selectedMovie","getPopularMovie","response","data","JSON","parse","stringify","details","filter","x","title","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\Mahanagar\\Varivas\\varivas_frontend\\src\\app\\Component\\movie-details\\movie-details.component.html","E:\\Mahanagar\\Varivas\\varivas_frontend\\src\\app\\Component\\movie-details\\movie-details.component.ts"],"sourcesContent":["<iframe style=\"\" width=\"560\" height=\"315\" *ngIf=\"this.selectedMovie[0]\" [src]=\"getUrl()\" frameborder=\"0\" \n    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture; \" allowfullscreen></iframe>","import { AllServicesService } from './../../services/all-services.service';\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport {DomSanitizer } from '@angular/platform-browser'\n\n\n@Component({\n  selector: 'app-movie-details',\n  templateUrl: './movie-details.component.html',\n  styleUrls: ['./movie-details.component.css']\n})\nexport class MovieDetailsComponent {\n\n  id: any\n\n  selectedMovie:any={\n    link:''\n  }\n\n  constructor(private route: ActivatedRoute, private service: AllServicesService,private sanitizer:DomSanitizer ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(paramsId => {\n      this.id = paramsId['id'];\n      console.log(this.id);\n    });\n\n    this.getAllMovie()\n  }\n\n  getUrl()\n{\n  return this.sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/'+this.selectedMovie[0].link+'?&controls=0&showinfo=0&showsearch=0&rel=1&iv_load_policy=3&cc_load_policy=1&autoplay=1&loop=1&fs=0&modestbranding=0');\n}\n\n  getAllMovie() {\n    this.service.getPopularMovie().subscribe(response=>{\n      let data = JSON.parse(JSON.stringify(response)).details\n\n      this.selectedMovie = data.filter((x:any)=>{\n        return x.title == this.id\n      })\n\n      console.log(this.selectedMovie)\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}